@using Microsoft.AspNetCore.Mvc.TagHelpers
@model WebApp.Models.DetailsViewModel

<div class="container mt-3">
    <div class="row justify-content-center">
        <div class="col-md-6 mb-3">
            <h1 class="text-center mb-3">@App.Resources.Details.Document.Edit @App.Resources.Details.EmployeeMentee.Mentor</h1>
            <div class="card">
                <div class="card-body">
                    <section>
                       <form id="mentorForm" method="post">
                           <div class="form-floating">
                               <input class="form-control" id="firstName" name="firstName" type="text"
                                      aria-label="@App.Resources.Details.EmployeeMentee.Mentor @App.Resources.Add.Mentee.FirstName" disabled>
                               <label for="firstName">@App.Resources.Details.EmployeeMentee.Mentor @App.Resources.Add.Mentee.FirstName</label>
                           </div>
                           <div class="form-floating">
                               <input class="form-control" id="lastName" name="lastName" type="text"
                                      aria-label="@App.Resources.Details.EmployeeMentee.Mentor @App.Resources.Add.Mentee.LastName" disabled>
                               <label for="lastName">@App.Resources.Details.EmployeeMentee.Mentor @App.Resources.Add.Mentee.LastName</label>
                           </div>
                           
                           <input id="mentorId" type="hidden" value="@Model.InitialMentorId" />
                           
                           <div class="form-group text-center mb-0">
                               <div class="d-flex justify-content-center">
                                   <div class="btn-group" role="group">
                                       <button type="button" class="btn btn-primary px-4 py-2 rounded-3 edit-btn">@App.Resources.Details.Document.Edit</button>
                                   </div>
                                   <div class="input-group-text" style="opacity: 0;">&nbsp;</div>
                                   <div class="btn-group" role="group">
                                       <button type="submit" class="btn btn-primary px-4 py-2 rounded-3 save-btn" disabled>@App.Resources.Details.Document.Save</button>
                                   </div>
                               </div>
                           </div>
                       </form>
                    </section>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .container {
        margin-top: 50px;
    }
    .card {
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
    }
    .card-body {
        padding: 2rem;
    }
    .form-floating {
        margin-bottom: 1rem;
    }
    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
    }
    .btn-primary:hover {
        background-color: #0056b3;
        border-color: #0056b3;
    }
    .table td, .table th {
        border-bottom: none !important;
    }
</style>

<script>
document.addEventListener("DOMContentLoaded", function() {
    const mentorId = "@Model.InitialMentorId";
    fetchMentorData(mentorId);

    function fetchMentorData(mentorId) {
        fetch('/api/v1.0/DetailsApi/GetMentor', {
            method: 'POST',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify({ mentorId: mentorId, firstName: "", lastName: "" })
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Failed to fetch mentor data');
            }
            return response.json();
        })
        .then(data => {
            document.getElementById('firstName').value = data.mentorFirstName;
            document.getElementById('lastName').value = data.mentorLastName;
        })
        .catch(error => {
            console.error("Error fetching mentor data:", error);
            alert("Failed to fetch mentor data: " + error.message);
        });
    }

    const editBtn = document.querySelector('.edit-btn');
    const saveBtn = document.querySelector('.save-btn');
    const form = document.getElementById('mentorForm');

    function toggleInputDisabled() {
        const inputs = form.querySelectorAll('input[type="text"]');
        inputs.forEach(input => {
            input.disabled = !input.disabled;
        });
        saveBtn.disabled = !saveBtn.disabled;
    }

    editBtn.addEventListener('click', function() {
        toggleInputDisabled();
    });

    form.addEventListener('submit', function(event) {
        event.preventDefault();
        if (!saveBtn.disabled) {
            updateMentor();
        }
    });

    function updateMentor() {
        const mentorData = {
            mentorId: mentorId,
            firstName: document.getElementById('firstName').value,
            lastName: document.getElementById('lastName').value
        };

        fetch('/api/v1.0/DetailsApi/UpdateMentor', {
            method: 'POST',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify(mentorData)
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Failed to update mentor data');
            }
            return response.json();
        })
        .then(data => {
            console.log('Mentor updated successfully:', data);
            alert("Mentor updated successfully!");
            document.getElementById('firstName').value = data.mentorFirstName;
            document.getElementById('lastName').value = data.mentorLastName;
            toggleInputDisabled();
        })
        .catch(error => {
            console.error("Error updating mentor data:", error);
            alert("Failed to update mentor data: " + error.message);
        });
    }
});
</script>

